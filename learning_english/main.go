package main

import (
	"bufio"
	"fmt"
	"os"
)

func main() {
	var num int
	var end bool = false
	for k,v := range words {
		if k%2 == 0 {
			var flag bool = true
			num++
			for flag {
				fmt.Printf("%d %s\n", num, v)
				fmt.Printf("%s:", "请输入英语单词")
				var word string
				Scanf(&word)
				if word == "exec" || word == "quit" {
					end = true
					break
				}
				if word == words[k+1] {
					flag = false
					fmt.Println(words[k+1])
				} else {
					fmt.Printf("%s：", "单词错误,是否重新输入？ 1是 2否")
					var input int
					fmt.Scanf("%d", &input)
					if input == 1 {
					} else if input == 2 {
						flag = false
						fmt.Println(words[k+1])
					} else {
						fmt.Println("输入有误,请重新输入")
					}
				}
			}
			if end {
				break
			}
		}
	}
}

func Scanf(s *string) {
	reader := bufio.NewReader(os.Stdin)
	input,_,_ := reader.ReadLine()
	*s = string(input)
}

var words = []string{
"应用程式 应用、应用程序",
"application",
"应用程式框架、应用框架 应用程序框架",
"application framework",
"架构、系统架构 体系结构",
"architecture",
"引数（传给函式的值）。参见 parameter 参数、实质参数、实参、自变量",
"argument",
"阵列 数组",
"array",
"（箭头）运算子 箭头操作符",
"arrow operator arrow",
"装配件",
"assembly",
"组合语言 汇编语言",
"assembly language",
"断言",
"assert(ion)",
"指派、指定、设值、赋值 赋值",
"assign",
"指派、指定 赋值、分配",
"assignment",
"指派（赋值）运算子 = 赋值操作符",
"assignment operator",
"相应的、相关的 相关的、关联、相应的",
"associated",
"关联式容器（对应 sequential container） 关联式容器",
"associative container",
"不可分割的 原子的",
"atomic",
"属性 属性、特性",
"attribute",
"音讯 音频",
"audio",
"人工智慧 人工智能",
"A.I.",
"背景 背景（用於图形着色） 后台（用於行程）",
"background",
"回溯相容 向下兼容",
"backward compatible",
"频宽 带宽",
"bandwidth",
"基础类别 基类",
"base class",
"基础型别 (等同於 base class)",
"base type",
"批次（意思是整批作业） 批处理",
"batch",
"利益 收益",
"benefit",
"最佳可行函式 最佳可行函式 （从 viable functions 中挑出的最佳吻合者）",
"best viable function",
"二分搜寻法 二分查找",
"binary search",
"二元树 二叉树",
"binary tree",
"二元函式 双参函数",
"binary function",
"二元运算子 二元操作符",
"binary operator",
"系结 绑定",
"binding",
"位元 位",
"bit",
"位元栏 位域",
"bit field",
"位元图 位图",
"bitmap",
"以 bit 为单元逐一┅",
"bitwise",
"以 bit 为单元进行复制；位元逐一复制 位拷贝",
"bitwise copy",
"区块,区段 块、区块、语句块",
"block",
"布林值（真假值，true 或 false） 布尔值",
"boolean",
"边框、框线 边框",
"border",
"大括弧、大括号 花括弧、花括号",
"brace(curly brace)",
"中括弧、中括号 方括弧、方括号",
"bracket(square brakcet)",
"中断点 断点",
"breakpoint",
"建造、构筑、建置（MS 用语）",
"build",
"内建 内置",
"build－in",
"汇流排 总线",
"bus",
"商务,业务 业务",
"business",
"按钮 按钮",
"buttons",
"位元组（由 8 bits 组成） 字节",
"byte",
"快取 高速缓存",
"cache",
"呼叫、叫用 调用",
"call",
"回呼 回调",
"callback",
"（函式呼叫）运算子调用操作符 ###### （同 function call operator）",
"call operator call",
"候选函式 候选函数 ###### （在函式多载决议程序中出现的候选函式）",
"candidate function",
"串链（例 chain of function calls） 链",
"chain",
"字元 字符",
"character",
"核取方块 (i.e. check button) 复选框",
"check box",
"可控式异常(Java)",
"checked exception",
"方钮 (i.e. check box) 复选按钮",
"check button",
"子类别（或称为derived class, subtype） 子类",
"child class",
"类别 类",
"class",
"类别本体 类体",
"class body",
"类别宣告、类别宣告式 类声明",
"class declaration",
"类别定义、类别定义式 类定义",
"class definition",
"类别衍化列 类继承列表",
"class derivation list",
"类别表头 类头",
"class head",
"类别继承体系, 类别阶层 类层次体系",
"class hierarchy",
"类别程式库、类别库 类库",
"class library",
"类别模板、类别范本 类模板",
"class template",
"类别模板偏特化 类模板部分特化",
"class template partial specializations ######",
"类别模板特化 类模板特化",
"class template specializations ######",
"清理、善后 清理、清除",
"cleanup",
"客端、客户端、客户 客户",
"client",
"主从架构 客户/服务器",
"client－server",
"剪贴簿 剪贴板",
"clipboard",
"复制 克隆",
"clone",
"群集 集合",
"collection",
"复合方块、复合框 组合框",
"combo box",
"命令列 命令行 (系统文字模式下的整行执行命令)",
"command line",
"通讯 通讯",
"communication",
"相容 兼容",
"compatible",
"编译期 编译期、编译时",
"compile time",
"编译器 编译器",
"compiler",
"组件 组件",
"component",
"复合、合成、组合 组合",
"composition",
"电脑、计算机 计算机、电脑",
"computer",
"概念 概念",
"concept",
"具象的 实在的",
"concrete",
"并行 并发",
"concurrent",
"组态 配置",
"configuration",
"连接，连线（网络,资料库） 连接",
"connection",
"约束（条件）",
"constraint",
"构件 构件",
"construct",
"容器 容器 ###### （存放资料的某种结构如 list, vector…）",
"container",
"内含 包容",
"containment",
"背景关系、周遭环境、上下脉络 环境、上下文",
"context",
"控制元件、控件 控件",
"control",
"主控台 控制台",
"console",
"常数（constant 的缩写，C++ 关键字）",
"const",
"常数（相对於 variable） 常量",
"constant",
"建构式 构造函数 ###### （与class 同名的一种 member functions）",
"constructor",
"动词：复制、拷贝 拷贝",
"copy",
"名词：复件, 副本",
"copy",
"涵盖 覆盖",
"cover",
"创建、建立、产生、生成 创建",
"create",
"产生、生成 创建",
"creation",
"游标 光标",
"cursor",
"订制、自定 定制",
"custom",
"资料 数据",
"data",
"资料库 数据库",
"database",
"数据库结构纲目",
"database schema",
"资料成员、成员变数 数据成员、成员变量",
"data member",
"资料结构 数据结构",
"data structure",
"资料元 数据报文",
"datagram",
"死结 死锁",
"dead lock",
"除错 调试",
"debug",
"除错器 调试器",
"debugger",
"宣告、宣告式 声明",
"declaration",
"推导（例：template argument deduction） 推导、推断",
"deduction",
"预设 缺省、默认",
"default",
"延缓 推迟",
"defer",
"定义 预定义",
"define",
"定义、定义区、定义式 定义",
"definition",
"委派、委托、委任 委托",
"delegate",
"（同上）",
"delegation",
"反编列 散集",
"demarshal",
"提领（取出指标所指物体的内容） 解参考",
"dereference",
"（提领）运算子 * 解参考操作符",
"dereference operator dereference",
"衍生类别 派生类",
"derived class",
"契约式设计",
"design by contract",
"设计范式、设计样式 设计模式 ※ 最近我比较喜欢「设计范式」一词",
"design pattern",
"摧毁、销毁",
"destroy",
"解构式 析构函数",
"destructor",
"装置、设备 设备",
"device",
"对话窗、对话盒 对话框",
"dialog",
"指令（例：using directive） (编译)指示符",
"directive",
"目录 目录",
"directory",
"碟 盘",
"disk",
"分派 分派",
"dispatch",
"分布式计算 (分布式电算) 分布式计算 分散式计算 (分散式电算)",
"distributed computing",
"文件 文档",
"document",
"（句点）运算子 . (圆)点操作符",
"dot operator dot",
"驱动程式 驱动（程序）",
"driver",
"动态系结 动态绑定",
"dynamic binding",
"效率 效率",
"efficiency",
"高效 高效",
"efficient",
"终端用户",
"end user",
"物体 实体、物体",
"entity",
"封装 封装",
"encapsulation",
"外围类别（与巢状类别 nested class 有关）外围类",
"enclosing class",
"列举（一种 C++ 资料型别） 枚举",
"enum (enumeration)",
"列举元（enum 型别中的成员） 枚举成员、枚举器",
"enumerators",
"相等 相等",
"equal",
"相等性 相等性",
"equality",
"（等号）运算子 == 等号操作符",
"equality operator equality",
"等价性、等同性、对等性 等价性",
"equivalence",
"等价、等同、对等 等价",
"equivalent",
"转义码 转义码",
"escape code",
"评估、求值、核定 评估",
"evaluate",
"事件 事件",
"event",
"事件驱动的 事件驱动的",
"event driven",
"异常情况 异常",
"exception",
"异常宣告（ref. C++ Primer 3/e, 11.3） 异常声明",
"exception declaration",
"异常处理、异常处理机制 异常处理、异常处理机制",
"exception handling",
"异常规格（ref. C++ Primer 3/e, 11.4） 异常规范",
"exception specification",
"退离（指离开函式时的那一个执行点） 退出",
"exit",
"明白的、明显的、显式 显式",
"explicit",
"汇出 引出、导出",
"export",
"运算式、算式 表达式",
"expression",
"设施、设备 设施、设备",
"facility",
"特性",
"feature",
"栏位,资料栏（Java） 字段, 值域（Java）",
"field",
"档案 文件",
"file",
"韧体 固件",
"firmware",
"旗标 标记",
"flag",
"快闪记忆体 闪存",
"flash memory",
"弹性 灵活性",
"flexibility",
"清理、扫清 刷新",
"flush",
"字型 字体",
"font",
"表单（programming 用语） 窗体",
"form",
"形式参数 形式参数",
"formal parameter",
"前置宣告 前置声明",
"forward declaration",
"转呼叫,转发 转发",
"forwarding",
"转呼叫函式,转发函式 转发函数",
"forwarding function",
"碎形 分形",
"fractal",
"框架 框架",
"framework",
"全特化（ref. partial specialization）",
"full specialization",
"函式、函数 函数",
"function",
"同 call operator",
"function call operator",
"函式物件（ref. C++ Primer 3/e, 12.3） 函数对象",
"function object",
"函式多载决议程序 函数重载解决（方案）",
"function overloaded resolution",
"功能、机能 功能",
"functionality",
"函式模板、函式范本 函数模板",
"function template",
"仿函式 仿函式、函子",
"functor",
"游戏 游戏",
"game",
"生成",
"generate",
"泛型、一般化的 一般化的、通用的、泛化",
"generic",
"泛型演算法 通用算法",
"generic algorithm",
" (相对於 setter) 取值函式",
"getter",
"全域的（对应於 local） 全局的",
"global",
"全域物件 全局对象",
"global object",
"全域生存空间（范围决议）运算子 :: 全局范围解析操作符",
"global scope resolution operator",
"群组",
"group",
"群组方块 分组框",
"group box",
"卫述句 (Refactoring, p250) 卫语句",
"guard clause",
"图形介面 图形界面",
"GUI",
"握手协商",
"hand shaking",
"识别码、识别号、号码牌、权柄 句柄",
"handle",
"处理常式 处理函数",
"handler",
"编死的 硬编码的",
"hard－coded",
"硬拷图 屏幕截图",
"hard－copy",
"硬碟 硬盘",
"hard disk",
"硬体 硬件",
"hardware",
"杂凑表 哈希表、散列表",
"hash table",
"表头档、标头档 头文件",
"header file",
"堆积 堆",
"heap",
"阶层体系 层次结构（体系）",
"hierarchy",
"挂钩 钩子",
"hook",
"超链结 超链接",
"hyperlink",
"图示、图标 图标",
"icon",
"整合开发环境 集成开发环境",
"IDE",
"识别字、识别符号 标识符",
"identifier",
"若且唯若 当且仅当",
"if and only if",
"伊利诺 伊利诺斯",
"Illinois",
"影像 图象",
"image",
"直接的（紧临的）上层 base class。 直接上层基类",
"immediate base",
"直接的（紧临的）下层 derived class。 直接下层派生类",
"immediate derived",
"不变性",
"immutability",
"不可变（的）",
"immutable",
"实作、实现 实现",
"implement",
"实作品、实作体、实作码、实件 实现",
"implementation",
"隐喻的、暗自的、隐式 隐式",
"implicit",
"汇入 导入",
"import",
"累加运算子 ++ 增加操作符",
"increment operator",
"无穷回圈 无限循环",
"infinite loop",
"无穷递回 无限递归",
"infinite recursive",
"资讯 信息",
"information",
"公共基础建设",
"infrastructure",
"继承、继承机制 继承、继承机制",
"inheritance",
"行内 内联",
"inline",
"行内展开 内联展开",
"inline expansion",
"初始化（动作） 初始化",
"initialization",
"初值列 初始值列表",
"initialization list",
"初始化 初始化",
"initialize",
"内隐类别 内嵌类",
"inner class",
"实体 实例 ###### （根据某种表述而实际产生的「东西」）",
"instance",
"具现化、实体化（常应用於 template） 实例化",
"instantiated",
"具现体、具现化实体（常应用於 template） 实例",
"instantiation",
"整数（的） 整型（的）",
"integer (integral)",
"整合 集成",
"integrate",
"交谈、互动 交互",
"interacts",
"介面 接口",
"interface",
"介面 界面",
"for GUI",
"直译器 解释器",
"interpreter",
"恒常性,约束条件 约束条件",
"invariants",
"唤起 调用",
"invoke",
"迭代（回圈一个轮回一个轮回地进行） 迭代",
"iterate",
"异常情况 异常",
"exception",
"异常宣告（ref. C++ Primer 3/e, 11.3） 异常声明",
"exception declaration",
"异常处理、异常处理机制 异常处理、异常处理机制",
"exception handling",
"异常规格（ref. C++ Primer 3/e, 11.4） 异常规范",
"exception specification",
"退离（指离开函式时的那一个执行点） 退出",
"exit",
"明白的、明显的、显式 显式",
"explicit",
"汇出 引出、导出",
"export",
"运算式、算式 表达式",
"expression",
"设施、设备 设施、设备",
"facility",
"特性",
"feature",
"栏位,资料栏（Java） 字段, 值域（Java）",
"field",
"档案 文件",
"file",
"韧体 固件",
"firmware",
"旗标 标记",
"flag",
"快闪记忆体 闪存",
"flash memory",
"弹性 灵活性",
"flexibility",
"清理、扫清 刷新",
"flush",
"字型 字体",
"font",
"表单（programming 用语） 窗体",
"form",
"形式参数 形式参数",
"formal parameter",
"前置宣告 前置声明",
"forward declaration",
"转呼叫,转发 转发",
"forwarding",
"转呼叫函式,转发函式 转发函数",
"forwarding function",
"碎形 分形",
"fractal",
"框架 框架",
"framework",
"全特化（ref. partial specialization）",
"full specialization",
"函式、函数 函数",
"function",
"同 call operator",
"function call operator",
"函式物件（ref. C++ Primer 3/e, 12.3） 函数对象",
"function object",
"函式多载决议程序 函数重载解决（方案）",
"function overloaded resolution",
"功能、机能 功能",
"functionality",
"函式模板、函式范本 函数模板",
"function template",
"仿函式 仿函式、函子",
"functor",
"游戏 游戏",
"game",
"生成",
"generate",
"泛型、一般化的 一般化的、通用的、泛化",
"generic",
"泛型演算法 通用算法",
"generic algorithm",
"相对於 setter) 取值函式",
"getter (",
"全域的（对应於 local） 全局的",
"global",
"全域物件 全局对象",
"global object",
"全域生存空间（范围决议）运算子 :: 全局范围解析操作符",
"global scope resolution operator",
"群组",
"group",
"群组方块 分组框",
"group box",
"卫述句 (Refactoring, p250) 卫语句",
"guard clause",
"图形介面 图形界面",
"GUI",
"握手协商",
"hand shaking",
"识别码、识别号、号码牌、权柄 句柄",
"handle",
"处理常式 处理函数",
"handler",
"编死的 硬编码的",
"hard－coded",
"硬拷图 屏幕截图",
"hard－copy",
"硬碟 硬盘",
"hard disk",
"硬体 硬件",
"hardware",
"杂凑表 哈希表、散列表",
"hash table",
"表头档、标头档 头文件",
"header file",
"堆积 堆",
"heap",
"阶层体系 层次结构（体系）",
"hierarchy",
"挂钩 钩子",
"hook",
"超链结 超链接",
"hyperlink",
"图示、图标 图标",
"icon",
"整合开发环境 集成开发环境",
"IDE",
"识别字、识别符号 标识符",
"identifier",
"若且唯若 当且仅当",
"if and only if",
"伊利诺 伊利诺斯",
"Illinois",
"影像 图象",
"image",
"直接的（紧临的）上层 base class。 直接上层基类",
"immediate base",
"直接的（紧临的）下层 derived class。 直接下层派生类",
"immediate derived",
"不变性",
"immutability",
"不可变（的）",
"immutable",
"实作、实现 实现",
"implement",
"实作品、实作体、实作码、实件 实现",
"implementation",
"隐喻的、暗自的、隐式 隐式",
"implicit",
"汇入 导入",
"import",
"累加运算子 ++ 增加操作符",
"increment operator",
"无穷回圈 无限循环",
"infinite loop",
"无穷递回 无限递归",
"infinite recursive",
"资讯 信息",
"information",
"公共基础建设",
"infrastructure",
"继承、继承机制 继承、继承机制",
"inheritance",
"行内 内联",
"inline",
"行内展开 内联展开",
"inline expansion",
"初始化（动作） 初始化",
"initialization",
"初值列 初始值列表",
"initialization list",
"初始化 初始化",
"initialize",
"内隐类别 内嵌类",
"inner class",
"实体 实例 ###### （根据某种表述而实际产生的「东西」）",
"instance",
"具现化、实体化（常应用於 template） 实例化",
"instantiated",
"具现体、具现化实体（常应用於 template） 实例",
"instantiation",
"整数（的） 整型（的）",
"integer (integral)",
"整合 集成",
"integrate",
"交谈、互动 交互",
"interacts",
"介面 接口",
"interface",
"介面 界面",
"for GUI",
"直译器 解释器",
"interpreter",
"恒常性,约束条件 约束条件",
"invariants",
"唤起 调用",
"invoke",
"迭代（回圈一个轮回一个轮回地进行） 迭代",
"iterate",
"反覆的，迭代的",
"iterative",
"迭代器（一种泛型指标） 迭代器",
"iterator",
"迭代（回圈每次轮回称为一个 iteration） 迭代",
"iteration",
"项目、条款 项、条款、项目",
"item",
"雷射 激光",
"laser",
"阶 层 (级) 例 high level 高阶 高层",
"level",
"程式库、函式库 库、函数库",
"library",
"生命期、寿命 生命期、寿命",
"lifetime",
"联结、连结 连接,链接",
"link",
"联结器、连结器 连接器",
"linker",
"字面常数（例 3.14 或 “hi” 这等常数值） 字面常数",
"literal constant",
"串列（linked－list） 列表、表、链表",
"list",
"列表方块、列表框 列表框",
"list box",
"载入 装载",
"load",
"载入器 装载器、载入器",
"loader",
"区域的（对应於 global） 局部的",
"local",
"区域物件 局部对象",
"local object",
"机锁",
"lock",
"回圈 循环",
"loop",
"左值 左值",
"lvalue",
"巨集 宏",
"macro",
"魔术数字 魔法数",
"magic number",
"维护 维护",
"maintain",
"操纵器（iostream 预先定义的一种东西） 操纵器",
"manipulator",
"编列 列集 参考 demarshal",
"marshal",
"机制 机制",
"mechanism",
"成员 成员",
"member",
"成员取用运算子（有 dot 和 arrow 两种） 成员存取操作符",
"member access operator",
"成员函式 成员函数",
"member function",
"成员初值列 成员初始值列表",
"member initialization list",
"以 member 为单元┅、members 逐一┅ 以成员为单位",
"memberwise",
"以 members 为单元逐一复制",
"memberwise copy",
"记忆体 内存",
"memory",
"表单、选单 菜单",
"menu",
"讯息 消息",
"message",
"以讯息为基础的 基於消息的",
"message based",
"讯息回圈 消息环",
"message loop",
"方法、行为、函式 方法",
"method (java)",
"超－ 元－ 例 meta－programming 超编程 元编程",
"meta－",
"微 微",
"micro",
"中介层 中间件",
"middleware",
"模塑",
"modeling",
"塑模语言，建模语言",
"modeling language",
"数据机 调制解调器",
"modem",
"模组 模块",
"module",
"饰词 修饰符",
"modifier",
"最末层衍生类别 最底层的派生类",
"most derived class",
"滑鼠 鼠标",
"mouse",
"可变的 可变的",
"mutable",
"多工 多任务",
"multi－tasking",
"命名空间 名字空间、命名空间",
"namespace",
"原生的 本地的、固有的",
"native",
"巢状类别 嵌套类",
"nested class",
"网路 网络",
"network",
"网路卡 网卡",
"network card",
"物件 对象",
"object",
"以物件为基础的 基於对象的",
"object based",
"目的档 目标文件",
"object file",
"物件模型 对象模型",
"object model",
"物件导向的 面向对象的",
"object oriented",
"线上 在线",
"online",
"不透明的",
"opaque",
"运算元 操作数",
"operand",
"作业系统 操作系统",
"operating system (OS)",
"操作、操作行为 操作",
"operation",
"运算子 操作符、运算符",
"operator",
"选项，可选方案 选项",
"option",
"常规的 常规的",
"ordinary",
"上限溢位（相对於 underflow） 溢出（underflow:下溢）",
"overflow",
"额外负担、额外开销 额外开销",
"overhead",
"多载化、多载化、重载 重载",
"overload",
"多载化函式 重载的函数",
"overloaded function",
"多载化运算子 被重载的操作符",
"overloaded operator",
"多载集合 重载集合",
"overloaded set",
"改写、覆写 重载、改写、重新定义 ###### （在 derived class 中重新定义虚拟函式",
"override",
"套件 包",
"package",
"对组",
"pair",
"调色盘、组件盘、工具箱",
"palette",
"窗格 窗格 ###### （有时为嵌板之意，例 Java Content Pane）",
"pane",
"平行 并行",
"parallel",
"参数（函式参数列上的变数） 参数、形式参数、形参",
"parameter",
"参数列 参数列表",
"parameter list",
"父类别（或称 base class） 父类",
"parent class",
"小括弧、小括号 圆括弧、圆括号",
"parentheses",
"解析 解析",
"parse",
"零件 部件",
"part",
"偏特化（ref. C++ Primer 3/e, 16.10） 局部特化 ###### （ref. full specialization）",
"partial specialization",
"传址（函式引数的传递方式）（非正式用语）传地址",
"pass by address",
"传址（函式引数的一种传递方式） 传地址, 按引用传递",
"pass by reference",
"传值（函式引数的一种传递方式） 按值传递",
"pass by value",
"范式、样式 模式",
"pattern",
"效率、性能兼而有之 性能",
"performance",
"永续性 持久性",
"persistence",
"图素、像素 像素",
"pixel",
"2",
"placement delete ref. C++ Primer 3/e, 15.8.",
"2",
"placement new ref. C++ Primer 3/e, 15.8.",
"平台 平台",
"platform",
"指标 指针 址位器（和址参器 reference 形成对映，满好）",
"pointer",
"轮询 轮询",
"poll",
"多型 多态",
"polymorphism",
"冒起式、弹出式 弹出式",
"pop up",
"埠 端口",
"port",
"后置式、后序式 后置式",
"postfix",
"优先序（通常用於运算子的优先执行次序）",
"precedence",
"前置式、前序式 前置式",
"prefix",
"前处理器 预处理器",
"preprocessor",
"质数 素数",
"prime",
"基本型别 (不同於 base class,基础类别)",
"primitive type",
"列印 打印",
"print",
"印表机 打印机",
"printer",
"优先权 (通常用於执行绪获得 CPU 时间的优先次序）",
"priority",
"程序 过程",
"procedure",
"程序性的、程序式的 过程式的、过程化的",
"procedural",
"行程 进程",
"process",
"评测 评测",
"profile",
"效能（效率）评测器 效能（性能）评测器",
"profiler",
"程式员 程序员",
"programmer",
"编程、程式设计、程式化 编程",
"programming",
"进度指示器 进度指示器",
"progress bar",
"专案 项目、工程",
"project",
"属性",
"property",
"协定 协议",
"protocol",
"假码、虚拟码、伪码 伪码",
"pseudo code",
"经过资格修饰（例如加上 scope 运算子） 限定",
"qualified",
"资格修饰词、饰词 限定修饰词",
"qualifier",
"品质 质量",
"quality",
"伫列 队列",
"queue",
"径度 弧度",
"radian",
"圆钮 单选按钮",
"radio button",
"引发（常用来表示发出一个 exception） 引起、引发",
"raise",
"随机数、乱数 随机数",
"random number",
"范围、区间（用於 STL 时） 范围、区间",
"range",
"等级、分等（ref. C++Primer 3/e 9,15章） 等级",
"rank",
"生鲜的、未经处理的 未经处理的",
"raw",
"记录 记录",
"record",
"记录集 记录集",
"recordset",
"递回 递归",
"recursive",
"重导向 重定向",
"re－direction",
"重构、重整 重构",
"refactoring",
"取用 参考",
"refer",
"指向、指涉、指代",
"refer to",
"（C++中类似指标的东西，相当於 “化身”） 引用、参考 址参器, see pointer",
"reference ",
"暂存器 寄存器",
"register",
"反射 反射、映像",
"reflection",
"关联式资料库 关系数据库",
"relational database",
"表述，表现 表述，表现",
"represent",
"决议（为算式中的符号名称寻找 解析 对应之宣告式的过程）",
"resolve",
"决议程序、决议过程 解析过程",
"resolution",
"解析度 分辨率",
"resolution",
"局限",
"restriction",
"传回、回返 返回",
"return",
"回返型别 返回类型",
"return type",
"回返值 返回值",
"return value",
"强固、稳健 健壮",
"robust",
"强固性、稳健性 健壮性",
"robustness",
"常式 例程",
"routine",
"执行期 运行期、运行时",
"runtime",
"(CLR)译为「通用语言执行层」",
"common language runtime",
"右值 右值",
"rvalue",
"储存 存储",
"save",
"排程 调度",
"schedule",
"排程器 调度程序",
"scheduler",
"结构纲目、组织纲目",
"scheme",
"卷轴 滚动条",
"scroll bar",
"生存空间、生存范围、范畴、作用域 生存空间",
"scope",
"生存空间（范围决议）运算子 :: 生存空间操作符",
"scope operator",
"生存空间决议运算子 生存空间解析操作符 ###### （与scope operator同）",
"scope resolution operator",
"萤幕 屏幕",
"screen",
"搜寻 查找",
"search",
"语意 语义",
"semantics",
"序列式容器 顺序式容器 ###### （对应於 associative container）",
"sequential container",
"伺服器、伺服端 服务器、服务端",
"server",
"串行",
"serial",
"次第读写,序列化 序列化 (serialize)",
"serialization",
"相对於 getter) 设值函式",
"setter (",
"信号",
"signal",
"标记式、签名式、署名式 签名",
"signature",
"滚轴 滑块",
"slider",
"条孔、槽 槽",
"slot",
"灵巧指标、精灵指标 智能指针",
"smart pointer",
"萤幕快照（图） 屏幕截图",
"snapshot",
"特殊化、特殊化定义、特殊化宣告 特化",
"specialization",
"规格 规格、规范",
"specification",
"分裂视窗 切分窗口",
"splitter",
"软体 软件",
"software",
"解法,解决方案 方案",
"solution",
"原始码 源码、源代码",
"source",
"堆叠 栈",
"stack",
"堆叠辗转开解（此词用於 exception 主题） 栈辗转开解 *",
"stack unwinding",
"标准程式库",
"standard library",
"标准模板程式库",
"standard template library",
"述句 语句、声明",
"statement",
"状态列、状态栏 状态条",
"status bar",
"见 standard template library",
"STL",
"资料流、串流 流",
"stream",
"字串 字符串",
"string",
"e",
"subroutin",
"下标运算子 [ ] 下标操作符",
"subscript operator",
"子型别 子类型",
"subtype",
"支援 支持",
"support",
"虚悬 挂起",
"suspend",
"符号 记号",
"symbol",
"语法 语法",
"syntax",
"标签 标记 索引标签,页签",
"tag",
"标的（例 target pointer：标的指标） 目标",
"target",
"工作切换 任务切换",
"task switch",
"模板、范本 模板",
"template",
"模板引数推导 模板参数推导",
"template argument deduction",
"模板显式特化（版本） 模板显式特化",
"template explicit specialization",
"模板参数 模板参数",
"template parameter",
"暂时物件 临时对象",
"temporary object",
"文字 文本",
"text",
}
